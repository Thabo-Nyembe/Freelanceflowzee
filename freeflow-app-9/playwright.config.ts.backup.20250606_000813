import { defineConfig, devices } from '@playwright/test';

export default defineConfig({
  testDir: './tests',
  /* Run tests in files in parallel */
  fullyParallel: true,
  /* Fail the build on CI if you accidentally left test.only in the source code. */
  forbidOnly: !!process.env.CI,
  /* Retry on CI only */
  retries: process.env.CI ? 2 : 0,
  /* Opt out of parallel tests on CI. */
  workers: process.env.CI ? 1 : undefined,
  /* Reporter to use. See https://playwright.dev/docs/test-reporters */
  reporter: [
    ['html', { 
      open: 'never',
      port: 9325  // Fixed: Use different port to avoid conflicts
    }],
    ['list'] // Add list reporter for better terminal output
  ],
  /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */
  use: {
    /* Base URL to use in actions like `await page.goto('/')`. */
    baseURL: 'http://localhost:3001',

    /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */
    trace: 'on-first-retry',
    
    /* Take screenshot on failure */
    screenshot: 'only-on-failure',
    
    /* Record video on failure */
    video: 'retain-on-failure',

    /* Enhanced timeout configurations */
    actionTimeout: 15000,
    navigationTimeout: 45000,
  },

  /* Configure projects for major browsers - Enhanced */
  projects: [
    {
      name: 'chromium',
      use: { 
        ...devices['Desktop Chrome'],
        // Enhanced Chrome settings
        viewport: { width: 1280, height: 720 },
        launchOptions: {
          args: ['--disable-web-security', '--disable-features=VizDisplayCompositor']
        }
      },
    },

    {
      name: 'firefox',
      use: { 
        ...devices['Desktop Firefox'],
        // Enhanced Firefox settings
        viewport: { width: 1280, height: 720 },
      },
    },

    {
      name: 'webkit',
      use: { 
        ...devices['Desktop Safari'],
        // Enhanced Safari/WebKit settings for better compatibility
        viewport: { width: 1280, height: 720 },
        // Increase timeouts for WebKit as it can be slower
        actionTimeout: 20000,
        navigationTimeout: 60000,
      },
    },

    /* Test against mobile viewports. */
    {
      name: 'Mobile Chrome',
      use: { 
        ...devices['Pixel 5'],
        // Enhanced mobile testing settings
        isMobile: true,
        hasTouch: true,
        // Explicitly set context options for mobile
        contextOptions: {
          hasTouch: true,
          isMobile: true,
        }
      },
    },
    {
      name: 'Mobile Safari',
      use: { 
        ...devices['iPhone 12'],
        // Enhanced mobile Safari testing
        isMobile: true,
        hasTouch: true,
        // WebKit mobile needs extra time
        actionTimeout: 20000,
        navigationTimeout: 60000,
        // Explicitly set context options for mobile
        contextOptions: {
          hasTouch: true,
          isMobile: true,
        }
      },
    },
  ],

  /* Run your local dev server before starting the tests */
  webServer: {
    command: 'npm run dev',
    url: 'http://localhost:3001',
    reuseExistingServer: true,  // Always reuse existing server
    timeout: 120 * 1000,
    // Enhanced error handling for dev server
    stderr: 'pipe',
    stdout: 'pipe',
  },

  /* Global test timeout */
  timeout: 45 * 1000,

  /* Enhanced expect timeout */
  expect: {
    timeout: 15 * 1000,
  },
}); 